version: '3'

services:
  # سرویس دیتابیس MySQL
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - app-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # سرویس Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - redis_data:/data

  # سرویس Nest.js (بک‌اند)
  nestjs:
    build:
      context: ./nest
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://root:rootpassword@mysql:3306/mydatabase?connect_timeout=30
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: unless-stopped
    env_file:
      - ./nest/.env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
    command: >
      sh -c "sleep 10 && npx prisma migrate deploy && node dist/main.js"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nestjs.rule=Host(`a.networklearnzero.shop`) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.nestjs-strip.stripprefix.prefixes=/api"
      - "traefik.http.routers.nestjs.middlewares=nestjs-strip"
      - "traefik.http.services.nestjs.loadbalancer.server.port=3001"

  # سرویس Next.js (فرانت‌اند)
  nextjs:
    build:
      context: ./next
      dockerfile: Dockerfile
    ports:
      - "80:80"     # HTTP برای ریدایرکت به HTTPS
      - "443:443"   # HTTPS
      - "3000:3000" # برای دسترسی مستقیم در توسعه
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api
      - NEXT_PUBLIC_PYTHON_API_URL=/python-api
      - NESTJS_API_URL=http://nestjs:3001
    restart: unless-stopped
    depends_on:
      - nestjs
      - pythonserver
    networks:
      - app-network
    volumes:
      - /etc/letsencrypt/archive/a.networklearnzero.shop:/certs
    # اسکریپت سفارشی در Dockerfile تنظیم شده است

  # سرویس Python
  pythonserver:
    build:
      context: ./faceDetectionWithCamera
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - FLASK_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=userpassword
      - MYSQL_DATABASE=mydatabase
    volumes:
      - /etc/letsencrypt/archive/a.networklearnzero.shop:/certs
    command: ["flask", "run", "--host=0.0.0.0"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pythonserver.rule=Host(`a.networklearnzero.shop`) && PathPrefix(`/python-api`)"
      - "traefik.http.middlewares.pythonserver-strip.stripprefix.prefixes=/python-api"
      - "traefik.http.routers.pythonserver.middlewares=pythonserver-strip"

  # سرویس phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=rootpassword
      - PMA_ABSOLUTE_URI=https://a.networklearnzero.shop/phpmyadmin/
    depends_on:
      - mysql
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`a.networklearnzero.shop`) && PathPrefix(`/phpmyadmin`)"
      - "traefik.http.middlewares.phpmyadmin-strip.stripprefix.prefixes=/phpmyadmin"
      - "traefik.http.routers.phpmyadmin.middlewares=phpmyadmin-strip"

  # سرویس Redis Commander
  redis-commander:
    image: rediscommander/redis-commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
      - URL_PREFIX=/redis-commander
    depends_on:
      - redis
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis-commander.rule=Host(`a.networklearnzero.shop`) && PathPrefix(`/redis-commander`)"

  # سرویس Traefik برای مدیریت مسیرها
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - "8080:8080" # داشبورد Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/letsencrypt/archive/a.networklearnzero.shop:/certs
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`a.networklearnzero.shop`) && PathPrefix(`/traefik`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-strip"
      - "traefik.http.middlewares.traefik-strip.stripprefix.prefixes=/traefik"

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data: 