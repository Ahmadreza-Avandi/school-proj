// CommonJS version of the server
const https = require('https');
const http = require('http');
const { parse } = require('url');
const next = require('next');
const fs = require('fs');
const express = require('express');

const dev = process.env.NODE_ENV !== 'production';
const app = next({ dev });
const handle = app.getRequestHandler();

// ŸÖÿ≥€åÿ± ⁄ØŸàÿßŸá€åŸÜÿßŸÖŸá‚ÄåŸáÿß
const httpsOptions = {
  key: fs.existsSync('/certs/privkey.pem') ? fs.readFileSync('/certs/privkey.pem') : '',
  cert: fs.existsSync('/certs/fullchain.pem') ? fs.readFileSync('/certs/fullchain.pem') : '',
};

app.prepare().then(() => {
  const server = express();

  // üöÄ ÿ±€åÿØÿß€åÿ±⁄©ÿ™ HTTP ÿ®Ÿá HTTPS
  http.createServer((req, res) => {
    // ÿØÿ± ÿµŸàÿ±ÿ™€å ⁄©Ÿá ⁄ØŸàÿßŸá€åŸÜÿßŸÖŸá SSL ŸÖŸàÿ¨ŸàÿØ ŸÜÿ®ÿßÿ¥ÿØÿå ÿ±€åÿØÿß€åÿ±⁄©ÿ™ ÿ®Ÿá ŸæŸàÿ±ÿ™ 3000 ÿßŸÜÿ¨ÿßŸÖ ŸÖ€å‚Äåÿ¥ŸàÿØ.
    if (!httpsOptions.key || !httpsOptions.cert) {
      res.writeHead(301, { Location: `http://${req.headers.host}${req.url}` });
      res.end();
    } else {
      res.writeHead(301, { Location: `https://${req.headers.host}${req.url}` });
      res.end();
    }
  }).listen(80, () => {
    console.log('üöÄ HTTP Server running on port 80 (Redirecting to HTTPS)');
  });

  // üöÄ ÿß⁄Øÿ± ⁄ØŸàÿßŸá€åŸÜÿßŸÖŸá‚ÄåŸáÿß Ÿàÿ¨ŸàÿØ ÿØÿßÿ¥ÿ™ÿå ÿ≥ÿ±Ÿàÿ± HTTPS ÿ±Ÿà ÿßÿ¨ÿ±ÿß ⁄©ŸÜ
  if (httpsOptions.key && httpsOptions.cert) {
    https.createServer(httpsOptions, (req, res) => {
      const parsedUrl = parse(req.url || '', true);
      handle(req, res, parsedUrl);
    }).listen(443, () => {
      console.log('‚úÖ HTTPS Server running on https://yourdomain.com');
    });
  } else {
    console.error('‚ùå SSL certificates not found! Make sure Let\'s Encrypt is configured.');
    // ÿØÿ± ÿµŸàÿ±ÿ™€å ⁄©Ÿá SSL ŸÖŸàÿ¨ŸàÿØ ŸÜÿ®ÿßÿ¥ÿØÿå ÿ≥ÿ±Ÿàÿ± HTTP ÿ±Ÿà ÿßÿ¨ÿ±ÿß ⁄©ŸÜ
    http.createServer((req, res) => {
      const parsedUrl = parse(req.url || '', true);
      handle(req, res, parsedUrl);
    }).listen(3000, () => {
      console.log('‚ùå Running without SSL on http://localhost:3000');
    });
  }
}); 