"use strict";(()=>{var e={};e.id=6702,e.ids=[6702],e.modules={62418:e=>{e.exports=require("mysql2/promise")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},41293:(e,t,r)=>{r.r(t),r.d(t,{config:()=>P,default:()=>d,routeModule:()=>p});var n={};r.r(n),r.d(n,{default:()=>c});var o=r(71802),i=r(47153),s=r(56249),a=r(62418),u=r.n(a);let l={connectionString:process.env.DATABASE_URL||"mysql://root:@localhost:3306/proj"};async function c(e,t){if("GET"!==e.method)return t.setHeader("Allow","GET"),t.status(405).json({message:"Method not allowed"});try{let e=await u().createConnection(l.connectionString),[r]=await e.execute("SELECT id, name, permissions FROM role");return await e.end(),t.status(200).json(r)}catch(e){return console.error("Error fetching roles:",e),t.status(500).json({message:"Internal server error"})}}let d=(0,s.l)(n,"default"),P=(0,s.l)(n,"config"),p=new o.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/roles",pathname:"/api/roles",bundlePath:"",filename:""},userland:n})},47153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},71802:(e,t,r)=>{e.exports=r(20145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=41293);module.exports=r})();